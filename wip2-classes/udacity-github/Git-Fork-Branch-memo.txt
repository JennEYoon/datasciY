Basically, the “fork and branch” workflow looks something like this:

 * Fork a GitHub repository.
 * Clone the forked repository to your local system.
 * Add a Git remote for the original repository.
 * Create a feature branch in which to place your changes.
 * Make your changes to the new branch.
 * Commit the changes to the branch.
 * Push the branch to GitHub.
 * Open a pull request from the new branch to the original repo.
 * Clean up after your pull request is merged.

1) Sign into my Github account.  While signed in, go to URL of repo I want to contribute to.  Top-Right menu, click "Fork" button.  Takes a few minutes.  Fork will be created to my Github account's repos.  

2) Clone MY "FORKED" repo to my local computer.  NOT origial public repo.  

git clone URL.git

git clone https://github.com/JennEYoon/geosnap.git    

3) Add a Git Remote for the original public repo.  

Original public repo, usually called "upstream".  

c

git remote add upstream https://github.com/spatialucr/geosnap.git 

> # To list, type "git remote"
> git remote
> origin
> upstream

4) Create a feature branch for my changes.  

git branch NAME
git checkout NAME

git branch data-issue
git checkout data-issue 
> # switched to data-issue  

5) Make changes to the branch, push to my Forked Github branch.

git push origin new-branch  

May need to squash commits into a single one, based on repo maintainer's guidline.  Also may need to name branch in a special way, also based on guideline.  

6) Open a Pull-Request on Public Repo.  

Once you push your changes to you rnew branch, Github will prompt you to create a pull request.  Maintainers of the public project will be notified of my pull request.  

7) Cleanup afer Merged Pull Request.  

If the maintainer has accepted and merged the change into the original public repo, do some cleanup.  First update my local repo with upstream.  

git pull upstream master.  

Delete feature branch  

git branch -d new-branch 


8) Update my Forked Copy on Github.  

git push origina master  

Delete feature branch from Github Fork on my account.  

git push --delete origin new-branch  

9) Keeping my Forked copy in sync on Github.  

git pull upstream master  
git push origin master  

Pulls down changes from upstream (original public repo) to my machine.  
Push those changes up to my origin master (Formed copy on Github) from my machine.  

10) If I'm not going to contribute, still need a local copy to sync Fork.

* Fork on Github  
  From browser, sign into my Github account.  
  Go to public repo to copy.  Click button top-right, "Fork".  

* Clone my Forked Copy.  
  From my machine, open Bash terminal, change directory to folder I want.
    
  git clone URL-MyForked.git   

* Add upstream (Origina public repo)   
  Continue on Bash terminal.

  git remote add upstream URL-Original.git  

* Keep my Forked copy synced with Original Public repo.  
  From local machine Bash Terminal, cd to correct local folder.

  git pull upstream master  
  git push origin master  

  My Forked Github repo is "remote origin".
  The Original Public Github repo is "remote upstream".

